@page "/"
@using DnetDialogComponent.Infrastructure.Interfaces
@using DnetDialogComponent.Infrastructure.Models
@using DnetOverlayComponent.Infrastructure.Enums
@using DnetOverlayComponent.Infrastructure.Interfaces
@using DnetOverlayComponent.Infrastructure.Models
@using DnetOverlayComponent.Infrastructure.Services
@using ServerSide.Infrastructure.Entities

@inject IOverlayService OverlayService
@inject IDialogService DialogService

<div class="dnet-m-l-40 dnet-m-t-40">
    <div class="d-flex">
        <span class="dnet-m-r-10" style="font-size: 1.5rem; font-weight: bold">Blazor DnetOverlay Component v.1.0.0</span>
    </div>

    <button @onclick="ShowDialog" class="btn btn-primary dnet-m-t-20 dnet-m-b-20" style="border-radius: 0">Show Dialog</button>

    <div class="d-flex">
        <span class="dnet-m-r-10">Result from Dialog Component:</span><span style="font-weight: bold">@_dialogData</span>
    </div>
</div>


@code {

    string _dialogData;

    void ShowDialog()
    {
        var dialogConfig = new DialogConfig()
        {
            Title = "Datalnet Modal component",
            HasBackdrop = true,
            HasTransparentBackdrop = false,
            Width = "600px",
            Height = "400px"
        };

        var person = new Person()
        {
            Name = "Adrián",
            LastName = "Mustelier"
        };

        var contentData = new ContentData();

        contentData.SetValue(person);

        var dialogReference = DialogService.Open<OverlayTestContent, Person>(dialogConfig, contentData);

        dialogReference.Close += CloseDialog;
    }

    void CloseDialog(OverlayResult overlayDataResult)
    {
        _dialogData = overlayDataResult.CloseReason == CloseReason.Ok ? overlayDataResult.ComponentData.ToString() : "";

        InvokeAsync(StateHasChanged);
    }
}


