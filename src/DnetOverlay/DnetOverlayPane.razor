
<div ref="OverlayElement" id="cdk-overlay-0" class="cdk-overlay-pane" style="@Styles">
    @ContentChild
</div>

@code {

    [Parameter]
    public RenderFragment ContentChild { get; set; }

    [Parameter]
    public OverlayConfig OverlayConfig { get; set; }


    public string Styles { get; set; } = null;

    public ElementReference OverlayElement { get; }


    private string _justifyContent { get; set; } = null;

    private string _alignItems { get; set; } = null;

    private string _rightOffset { get; set; } = null;

    private string _leftOffset { get; set; } = null;

    private string _topOffset { get; set; } = null;

    private string _bottomOffset { get; set; } = null;


    protected override void OnInitialized()
    {
        Styles = GetStyles();
    }

    private string GetStyles()
    {

        var globalPositionStrategy = OverlayConfig.GlobalPositionStrategy;

        var overlayElement = OverlayElement;

        switch (globalPositionStrategy.OverlayPosition)
        {

            case OverlayPosition.Top:

                PositionTop(globalPositionStrategy.TopOffset);

                break;

            case OverlayPosition.Right:

                PositionRight(globalPositionStrategy.RightOffset);

                break;

            case OverlayPosition.Bottom:

                PositionBottom(globalPositionStrategy.BottomOffset);

                break;

            case OverlayPosition.Left:

                PositionLeft(globalPositionStrategy.LeftOffset);

                break;

            case OverlayPosition.None:
                break;

        }

        if (globalPositionStrategy.CenterHorizontally)
        {
            CenterHorizontally(globalPositionStrategy.HorizontallOffset);
        }

        if (globalPositionStrategy.CenterVertically)
        {
            CenterVertically(globalPositionStrategy.VerticalOffset);
        }

        var shouldBeFlushHorizontally = (OverlayConfig.Width == "100%" || OverlayConfig.Width == "100vw") &&
                                            (string.IsNullOrEmpty(OverlayConfig.MaxWidth) || OverlayConfig.MaxWidth == "100%" || OverlayConfig.MaxWidth == "100vw");

        var shouldBeFlushVertically = (OverlayConfig.Height == "100%" || OverlayConfig.Height == "100vh") &&
                                        (string.IsNullOrEmpty(OverlayConfig.MaxHeight) || OverlayConfig.MaxHeight == "100%" || OverlayConfig.MaxHeight == "100vh");

        var marginLeft = shouldBeFlushHorizontally ? "0" : this._leftOffset;
        var marginTop = shouldBeFlushVertically ? "0" : this._topOffset;
        var marginBottom = this._bottomOffset;
        var marginRight = this._rightOffset;

        var styles = new StyleBuilder("pointer-events", "auto")
            .AddStyle("position", "static")
            .AddStyle("marginLeft", marginLeft, when: string.IsNullOrEmpty(marginLeft))
            .AddStyle("marginTop", marginTop, when: string.IsNullOrEmpty(marginTop))
            .AddStyle("marginBottom", marginBottom, when: string.IsNullOrEmpty(marginBottom))
            .AddStyle("marginRight", marginRight, when: string.IsNullOrEmpty(marginRight))
            .Build();

        return styles;
    }

    private void PositionTop(string offset)
    {

        _bottomOffset = "";
        _topOffset = offset;
        _alignItems = "flex-start";
    }

    private void PositionRight(string offset)
    {

        _leftOffset = "";
        _rightOffset = offset;
        _justifyContent = "flex-end";
    }

    private void PositionBottom(string offset)
    {

        _topOffset = "";
        _bottomOffset = offset;
        _alignItems = "flex-end";
    }

    private void PositionLeft(string offset)
    {

        _rightOffset = "";
        _leftOffset = offset;
        _justifyContent = "flex-start";
    }

    private void CenterHorizontally(string offset)
    {

        PositionLeft(offset);
        _justifyContent = "center";
    }

    private void CenterVertically(string offset)
    {

        PositionTop(offset);
        _alignItems = "center";
    }

}
